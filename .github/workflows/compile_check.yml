
name: Compile and check

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  EXECUTABLES: "zappy_ai zappy_server zappy_gui"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run coding style checker
        run: |
          check.sh $(pwd) $(pwd)
          grep --invert-match "./server/tests|./gui/raylib|./gui/raylib_cpp" coding-style-reports.log | while IFS= read -r line; do
            file=$(echo "$line" | awk -F ':' '{print $1}')
            line_number=$(echo "$line" | awk -F ':' '{print $2}')
            severity=$(echo "$line" | awk -F ':' '{print $3}')
            message=$(echo "$line" | awk -F ':' '{print $4}')
            echo "::error file=$file,line=$line_number::$severity $message"
          done
          line_count=$(grep --invert-match "./server/tests|./gui/raylib|./gui/raylib_cpp" coding-style-reports.log | wc -l)
          if [ "$line_count" -gt 6 ]; then
            echo "::error::Too many style errors"
            exit 1
          fi

  compile_and_run_tests:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout submodules
        run: |
          git config --global --add safe.directory /__w/B-YEP-400-TLS-4-1-zappy-leo.wehrle/B-YEP-400-TLS-4-1-zappy-leo.wehrle
          git submodule update --init --recursive

      # - name: Install dependencies
      #   run: |
      #     sudo apt install libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev

      - name: Compile program
        run: make; make fclean; make re

      # fail if executable is not found
      - name: Check executables
        run: |
          echo "## Executables" >> $GITHUB_STEP_SUMMARY
          for executable in $EXECUTABLES; do
            if [ ! -f $executable ]; then
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              echo "Error: $executable not found" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          done
